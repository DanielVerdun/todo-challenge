# docker-compose.yml (producción)
# versión 3.8 es obsoleta, se elimina para versiones recientes de docker compose
services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$DATABASE_USER -d $$DATABASE_NAME -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

    volumes:
      - static_volume:/app/staticfiles    # para compartir estáticos entre web y nginx
      # ELIMINAR EL VOLUMEN DEL CÓDIGO EN PRODUCCIÓN
      # - ./:/app:rw  <-- ESTA LÍNEA SE ELIMINA
    ports:
      # Exponer el puerto de Gunicorn para desarrollo o debug,
      # Nginx lo manejará en producción.
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume: